/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/faq.js":
/*!*****************************!*\
  !*** ./resources/js/faq.js ***!
  \*****************************/
/***/ (() => {

eval("// FAQ Script\n\nwindow.addEventListener(\"DOMContentLoaded\", function (event) {\n  console.debug(\"faq.js - DOMContentLoaded\");\n  var removers = document.querySelectorAll('.faq-delete');\n  if (removers) {\n    removers.entries(function (link) {\n      link.addEventListener(\"click\", function (e) {\n        if (!confirm(\"Voulez-vous effacer cette question et sa réponse?\")) {\n          e.preventDefault();\n          return false;\n        }\n      });\n    });\n  }\n});\nvar saveFAQ = function saveFAQ(_ref) {\n  var formId = _ref.formId;\n  console.debug(\"calling SaveFAQ!\");\n  var form = document.querySelector(formId);\n  if (!form) {\n    console.debug(\"`%s` form not found\", formId);\n    return false;\n  }\n  fetch(form.action, {\n    body: new FormData(form),\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"no-cache\"\n  }).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if (response.done) {\n      if (response.insert) insertTable({\n        faq: response.faq,\n        message: response.message\n      });else if (response.update) updateTable({\n        faq: response.faq,\n        message: response.message\n      });\n    }\n  })[\"catch\"](function (err) {\n    console.error(err);\n  });\n  return false;\n};\nvar insertTable = function insertTable(_ref2) {\n  var faq = _ref2.faq,\n    message = _ref2.message;\n  window.location.reload();\n  return false;\n\n  // Récupération de la table\n  var table = document.querySelector('#faq-table');\n  // SI la table n'existe pas alors on sort de la fonction\n  if (!table) {\n    console.debug(\"La table des FAQ n'a pas été trouvé!!!\");\n    return false;\n  }\n  // Si la table existe alors il faut cacher le #faq-empty (display none)\n  var emptyRow = document.querySelector(\"#faq-empty\");\n  if (emptyRow) {\n    emptyRow.style.display = \"none\";\n  }\n  // Créer le TR avec un ID\n  var tr = document.createElement('tr');\n  tr.id = \"faq-\".concat(faq.id);\n  // Créer les TD question, answer, rank et action\n  var question = document.createElement('td');\n  question.id = \"question-\".concat(faq.id);\n  question.innerHTML = faq.question;\n  tr.appendChild(question);\n  var answer = document.createElement('td');\n  answer.id = \"answer-\".concat(faq.id);\n  answer.innerHTML = faq.answer;\n  tr.appendChild(answer);\n  // Ajouter les informations dans les TD\n  // Créer lien éditions et Suppression\n  // Insérer les TD dans le TR, TR dans Table > TBODY\n};\n\nvar updateTable = function updateTable(_ref3) {\n  var faq = _ref3.faq,\n    message = _ref3.message;\n  window.location.reload();\n  return false;\n  var table = document.querySelector('#faq-table');\n  if (!table) {\n    console.debug(\"FAQ Table not found!\");\n    return;\n  }\n\n  // METTRE à jour la table\n};\n\nvar showModal = function showModal(_ref4) {\n  var id = _ref4.id,\n    url = _ref4.url;\n};\nvar updateFaq = function updateFaq(formId) {\n  saveFAQ(formId);\n  // Cacher le BS Modal\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/faq.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/faq.js"]();
/******/ 	
/******/ })()
;